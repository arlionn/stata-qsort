
  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   13.1   Copyright 1985-2013 StataCorp LP
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
                                      College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Single-user Stata perpetual license:
       Serial number:  301306294610
         Licensed to:  Mauricio Caceres
                       mauricio.caceres.bravo@gmail.com

Notes:
      1.  Command line editing disabled
      2.  Stata running in batch mode

Note:  Your site can add messages to the introduction by editing the file
       stata.msg in the directory where Stata is installed.

. do tmp.do 

. version 13

. clear all

. set more off

. set varabbrev off

. * set seed 42
. set seed 1729

. set linesize 128

. 
. * sysuse auto,  clear
. * set rmsg on
. * clear
. * set obs 2000000
. * * set obs 100000
. * gen x = floor(rnormal())
. * gen y = rnormal()
. * qui ralpha rstr, l(5)
. * qui ralpha rst2, l(3)
. * replace rstr = rstr + "s"
. * replace rst2 = rst2 + "someting longer"
. * gen double id2 = _n
. * gen byte dummy = runiform()
. * gen idx = _n
. * save /tmp/qsort, replace
. 
. set rmsg on
r; t=0.00 23:11:44

. * use /tmp/qsort in 1/150000, clear
. use /tmp/qsort, clear
r; t=0.03 23:11:44

. * gen testing = "This is a very long string; I don't see how mem wouldn't go through the roof."
. * desc
. expand 3
(4000000 observations created)
r; t=0.14 23:11:44

. replace dummy = runiform()
dummy was byte now float
(6000000 real changes made)
r; t=0.45 23:11:45

. * sort rstr x rst2 y dummy
. * cap drop st_idx
. * gen st_idx = _n
. * sort idx
. * sort x y dummy
. 
. cap noi qsort x y dummy, v b
plugin call qsort_plugin x y dummy rstr rst2 id2 idx, sort
(memory overhead > 468.00MiB)
        Sort (1): Read in sort vars; 0.588 seconds.
        Sort (2): Sorted numeric array; 1.494 seconds.
        Sort (1): Read in rest of data; 1.011 seconds.
        Sort (3): Wrote back sorted data; 0.474 seconds.
r; t=3.80 23:11:49

. cap noi qsort idx, v b
plugin call qsort_plugin idx x y rstr rst2 id2 dummy, sort
(memory overhead > 468.00MiB)
        Sort (1): Read in sort vars; 0.455 seconds.
                Step (2.1) counting sort: min = 1, max = 2,000,000
        Sort (2): Sorted bijection; 0.285 seconds.
        Sort (1): Read in rest of data; 1.181 seconds.
        Sort (3): Wrote back sorted data; 0.920 seconds.
r; t=3.22 23:11:52

. cap noi qsort x idx, v b
plugin call qsort_plugin x idx y rstr rst2 id2 dummy, sort
(memory overhead > 468.00MiB)
        Sort (1): Read in sort vars; 0.569 seconds.
                Step (2.1) radix sort: loops = 2, bits = 16, shift = 65,536
        Sort (2): Sorted bijection; 0.431 seconds.
        Sort (1): Read in rest of data; 0.395 seconds.
        Sort (3): Wrote back sorted data; 0.455 seconds.
r; t=2.36 23:11:54

. * cap noi qsort idx, v b
. * cap noi qsort rstr x rst2 y dummy, v b
. * l if st_idx != _n
. * assert st_idx == _n
. 
end of do-file
r; t=0.00 23:11:54
